<#@ template language="C#" debug="true" hostspecific="true" #>
<#@ output extension=".cpp" encoding="utf-8" #>
<#
	InterfaceModel model = (InterfaceModel) Host.GetHostOption("CurrentInterface");
#>

#include <Talon/TalonPrefix.h>
#include <Talon/<#= model.Module #>/<#= model.Name #>.h>

namespace Talon
{
<#
	foreach (MethodModel method in model.Constructors)
	{
#>
	<#= model.Name #>::<#= model.Name #>(<# method.GenerateParameterList(this, t => t.FieldType); #>)
		: Base(<# method.GenerateParameterList(this, t => t.FieldType, ParameterListOptions.IncludeNames); #>)
<#

#>
	{
	}

<#
	}

	if (model.Constructors.Count == 0)
	{
#>
	<#= model.Name #>::<#= model.Name #>()
		: Base()
	{
	}

<#	} #>

	<#= model.Name #>::~<#= model.Name #>()
	{

	}

<#
	foreach (MethodModel method in model.Delegates)
	{
#>
	<#= method.ReturnType.ParameterType #> <#= model.Name #>::On<#= method.Name #>(<# method.GenerateParameterList(this); #>)
	{
		Base::On<#= method.Name #>(<# method.GenerateParameterList(this, options:ParameterListOptions.IncludeNames); #>);
	}

<#
	}
#>
}